{"version":3,"file":"static/js/186.c36d4e51.chunk.js","mappings":"yOA6CA,UAxCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,oGAEZJ,GAAW,GAFC,UAGWK,EAAAA,EAAAA,IAAYJ,GAHvB,OAGNK,EAHM,OAIZR,EAAWQ,EAASC,KAAKC,SAJb,gDAMZC,QAAQC,IAAR,MANY,yBAQZV,GAAW,GARC,4EAAH,qDAWbI,GACD,GAAE,CAACH,KAGF,gCACGF,IAAW,SAAC,IAAD,KACZ,wBACGF,EAAQc,OAAS,EAChBd,EAAQe,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACV,2BACE,0BAAI,WAASF,MACb,uBAAIC,MAFGC,EADC,KAOZ,uBAAG,kDAKZ,C,qKCvCDC,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAHc,oCAMT,IAAMC,EAAqB,WAChC,OAAOF,EAAAA,EAAAA,IAAU,kDAClB,EAEYX,EAAc,SAACU,GAC1B,OAAOC,EAAAA,EAAAA,IAAA,6CAAgDD,EAAhD,YACR,EAEYI,EAAe,SAACJ,GAC3B,OAAOC,EAAAA,EAAAA,IAAA,6CAAgDD,GACxD,EAEYK,EAAW,SAAAL,GACtB,OAAOC,EAAAA,EAAAA,IAAA,6CAAgDD,EAAhD,YACR,EAEYM,EAAgB,SAAAC,GAC3B,OAAON,EAAAA,EAAAA,IAAA,0DAA6DM,GAErE,C","sources":["components/Reviews/Reviews.jsx","components/services/API.js"],"sourcesContent":["import { fetchReview } from 'components/services/API';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        setLoading(true);\n        const response = await fetchReview(movieId);\n        setReviews(response.data.results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      <ul>\n        {reviews.length > 0 ? (\n          reviews.map(({ author, content, id }) => (\n            <li key={id}>\n              <h4>Author: {author}</h4>\n              <p>{content}</p>\n            </li>\n          ))\n        ) : (\n          <p>We don't have any reviews for this movie.</p>\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;","import axios from 'axios';\n\nconst API_KEY = '6c75f517288c8a390bd4f3c255485a07';\n// axios.defaults.baseURL ='https://api.themoviedb.org/3/movie/';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const fetchPopularMovies = () => {\n  return axios.get('https://api.themoviedb.org/3/trending/movie/day');\n};\n\nexport const fetchReview = (id) => {\n  return axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews`);\n};\n\nexport const fetchDetails = (id) => {\n  return axios.get(`https://api.themoviedb.org/3/movie/${id}`);\n};\n\nexport const fetchCast= id => {\n  return axios.get(`https://api.themoviedb.org/3/movie/${id}/credits`);\n};\n\nexport const fetchAnyMovie = query => {\n  return axios.get(`https://api.themoviedb.org/3/search/movie?query=${query}`\n  );\n};"],"names":["useState","reviews","setReviews","loading","setLoading","movieId","useParams","useEffect","getCast","fetchReview","response","data","results","console","log","length","map","author","content","id","axios","api_key","fetchPopularMovies","fetchDetails","fetchCast","fetchAnyMovie","query"],"sourceRoot":""}