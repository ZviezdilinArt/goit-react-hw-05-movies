{"version":3,"file":"static/js/387.ef998ff2.chunk.js","mappings":"wQAEaA,E,QAAOC,EAAAA,GAAH,25B,6BCkEjB,EA7Da,WACX,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QA2BR,OA1BAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,oGAEZJ,GAAW,GAFC,UAGWK,EAAAA,EAAAA,GAAUJ,GAHrB,OAGNK,EAHM,OAIZR,EAAQQ,EAASC,KAAKV,MAJV,gDAMZW,QAAQC,IAAR,MANY,yBAQZT,GAAW,GARC,4EAAH,qDAWbI,GACD,GAAE,CAACH,KAEJE,EAAAA,EAAAA,YAAU,YACRO,EAAAA,EAAAA,KAAU,SACX,KAUC,gCACGX,IAAW,SAACY,EAAA,EAAD,KACZ,SAACjB,EAAD,UACGG,EAAKe,KAAI,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,GAAlC,OACR,0BACGD,GACC,gBACEE,MAAM,MACNC,OAAO,MACPC,IAAG,yCAAoCJ,GACvCK,IAAKN,KAGP,gBACEO,UAAU,SACVJ,MAAM,MACNC,OAAO,MACP,WAAS,6DACTE,IAAI,YAGR,yBAAG,SAAON,MACV,yBAAG,cAAYD,OAlBRG,EADD,QAyBjB,C,qKC9DDM,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAHc,oCAMT,IAAMC,EAAqB,WAChC,OAAOF,EAAAA,EAAAA,IAAU,kDAClB,EAEYG,EAAc,SAACT,GAC1B,OAAOM,EAAAA,EAAAA,IAAA,6CAAgDN,EAAhD,YACR,EAEYU,EAAe,SAACV,GAC3B,OAAOM,EAAAA,EAAAA,IAAA,6CAAgDN,GACxD,EAEYX,EAAW,SAAAW,GACtB,OAAOM,EAAAA,EAAAA,IAAA,6CAAgDN,EAAhD,YACR,EAEYW,EAAgB,SAAAC,GAC3B,OAAON,EAAAA,EAAAA,IAAA,0DAA6DM,GAErE,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/services/API.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  /* justify-content: space-between; */\n  padding: 0;\n  row-gap: 25px;\n  column-gap:110px;\n  li {\n    display: flex;\n    flex-direction: column;\n    /* justify-content: center; */\n    /* align-items: center; */\n    width: 200px;\n    /* min-height: 350px; */\n    /* margin-bottom: 25px; */\n    /* border: 2px solid black; */\n    /* border-radius: 10px; */\n  }\n  img {\n    border: 2px solid black;\n    border-radius: 10px;\n    height: auto;\n    max-height: 350px;\n    /* margin: 0 auto; */\n  }\n  p {\n    margin: 5px 0px;\n    font-size: 16px;\n  }\n\n  /* display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto; */\n`;","import { fetchCast } from 'components/services/API';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { List } from './Cast.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { run as runHolder } from 'holderjs';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        setLoading(true);\n        const response = await fetchCast(movieId);\n        setCast(response.data.cast);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getCast();\n  }, [movieId]);\n\n  useEffect(() => {\n    runHolder('holder');\n  });\n\n  // useEffect(() => {\n  //   window.scrollBy({\n  //     top: 200 * 2,\n  //     behavior: 'smooth',\n  //   });\n  // }, [cast]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      <List>\n        {cast.map(({ character, name, profile_path, id }) => (\n          <li key={id}>\n            {profile_path ? (\n              <img\n                width=\"200\"\n                height=\"300\"\n                src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                alt={name}\n              />\n            ) : (\n              <img\n                className=\"holder\"\n                width=\"200\"\n                height=\"300\"\n                data-src=\"holder.js/200x300?bg=#483d8b&text=There is no image yet...\"\n                alt=\"holder\"\n              />\n            )}\n            <p>Name: {name}</p>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default Cast;","import axios from 'axios';\n\nconst API_KEY = '6c75f517288c8a390bd4f3c255485a07';\n// axios.defaults.baseURL ='https://api.themoviedb.org/3/movie/';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const fetchPopularMovies = () => {\n  return axios.get('https://api.themoviedb.org/3/trending/movie/day');\n};\n\nexport const fetchReview = (id) => {\n  return axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews`);\n};\n\nexport const fetchDetails = (id) => {\n  return axios.get(`https://api.themoviedb.org/3/movie/${id}`);\n};\n\nexport const fetchCast= id => {\n  return axios.get(`https://api.themoviedb.org/3/movie/${id}/credits`);\n};\n\nexport const fetchAnyMovie = query => {\n  return axios.get(`https://api.themoviedb.org/3/search/movie?query=${query}`\n  );\n};"],"names":["List","styled","useState","cast","setCast","loading","setLoading","movieId","useParams","useEffect","getCast","fetchCast","response","data","console","log","runHolder","Loader","map","character","name","profile_path","id","width","height","src","alt","className","axios","api_key","fetchPopularMovies","fetchReview","fetchDetails","fetchAnyMovie","query"],"sourceRoot":""}